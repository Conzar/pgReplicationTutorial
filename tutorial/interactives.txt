Interactives
============

Streaming Async Replication
---------------------------

3 vols

1: you are the master
2: you are pg_basebackup
3: clone

These cards represent blocks of data.

Stand the master in front
Ok, pgbasebackup, you're going to clone the master
Now now clone the master
Ok, you are the replica
Replica, signal the master:
"Hey, I'm ready for replication"
    That's the WalReceiver
Master, send a replication connection to the replica.
Ok, now start passing data blocks
Replica, drop the connection.
Replica, pick the connection back up.

Archiving Replication
---------------------

3 vols:

1 master
2 clone
3 writer client
4 admin

Stand the master in front

admin, your goal is to clone the master and establish a replication connection
as fast as you can.
writer, your job is to pass data writes (cards) to the master as fast as you can once cloning starts.
master, I want you to drop data pages on the floor if the replica isn't ready
clone, don't do anything to help.

so, second time:

same as the first: only master, you put data pages on the table once cloning starts.

failover and failback
---------------------

1 master
2 replica
3 writer

writer, pass data writes ever couple seconds to the master
master, pass them to the replica
now, master, you're down (sit down).  don't hand over that card.
replica, you're the new master.  you're promoted!  congrats!
since you're coming up, you'll start a new *timeline*
   please start using this suite.
writer, start passing cards to the new master.
old master, you're back up.
but now you're a replica
let's start replication the other way.
ooops!  what about that card you're holding?
data corruption!  danger will robinson, danger!
this is why you get a "cannot switch timeline" error.
now master, we're gonna reclone you from the new master
and establish replication
this card is now permanently lost
then, we're going to switch directions.

split-brain
-----------

same group

here's all the network connections
writer, you need to decide who to write to
now, drop the connection between master & replica
replica, you are now a master
writer, who do you write to?

remastering
-----------

add third person
    you are replica2
master pass red card to replica1 and black to replica2
now, master is down
how to choose which replica is new master?

replication lag
---------------

1 writer
2 master
3 replica
4 reader

explain vacuum, blocking and replicas
2 reasons for lag:  replica busy,
    and file operations
writer, pass cards to master
these two jokers are "vacuum" cards
insert them whereever you like
reader, request cards from replica
hold on to cards for a while
if joker comes while reader is holding a card
    don't take any more replication until
    reader gives back card
go

synchronous replication
-----------------------

1 writer
2 master
3 replica

writer, pass cards
    pairs, here's the card and here's the ack
master, pass card to replica
replica, pass ack back to master
master pass ack back to writer
go

cascading replication
---------------------

1 master
2 replica
3 2nd replica
4. writer

writer, pass cards to master
replica, hold onto cards
now, clone replica
replica, pass cards to 2nd replica
master, you're down
replica, you're promoted
writer, pass cards to new master

load-balancing
--------------

1 application
2 master
3 replica
4 proxy

application, red cards are reads, black are writes
pass them all to master
now start passing them faster
replica, you're idle.  act idle
wouldn't it be nice if we could make the replica do some work?
one way:
    application, pass red cards to replica, black to master
another way:
    proxy, you're in the middle
    proxy, you'll sort red from black cards
now, application, I want you to pass a black card
    and then ask for it back really quickly

    